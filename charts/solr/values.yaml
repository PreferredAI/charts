## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##
global: {}
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Docker Official Solr image version
## ref: https://hub.docker.com/_/solr/
##
image:
  registry: docker.io
  repository: solr
  tag: 8.4.0
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:

## String to partially override solr.fullname template (will maintain the release name)
##
nameOverride:

## String to fully override solr.fullname template
##
fullnameOverride:

## Solr settings
##
port: 8983

# Settings for solr java memory
javaMem: "-Xms2g -Xmx3g"

# Specify the initial script file name here to be executed before starting Solr
# The file is located relative to the solr chart root folder
initScript: ""

# Sets the termination Grace period for the solr pods
# This can take a while for shards to elect new leaders
terminationGracePeriodSeconds: 180

# The log level of the Solr instances
logLevel: "INFO"

# Solr pod disruption budget
podDisruptionBudget:
  maxUnavailable: 1

## Number of replicas
##
replicaCount: 3
## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## updateStrategy for Solr
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  type: RollingUpdate
## An array to add extra env vars
## For example:
## extraEnvVars:
##  - name: KIBANA_ELASTICSEARCH_URL
##    value: test
##
extraEnvVars:
## Additional pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:
## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
volumeClaimTemplates:
  ## solr data Persistent Volume Storage Class
  storageClassName: ""
  accessModes:
    - "ReadWriteOnce"
  ## PersistentVolumeClaim size
  ##
  storageSize: 20Gi

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: true
  fsGroup: 8983
  runAsUser: 8983
  runAsNonRoot: true

## Kubernetes service type
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:
  ## Additional service annotations (evaluate as a template)
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  annotations: {}
  ## Service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  type: ClusterIP

## Configure extra options for liveness and readiness probes
## This applies to all the Solr in the sharded cluster
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 45
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

# Configuration for solr TLS handling, see README.md for more instructions
tls:
  enabled: false
  wantClientAuth: "false"
  needClientAuth: "false"
  keystorePassword: "changeit"
  importKubernetesCA: "false"
  checkPeerName: "false"
  caSecret:
    name: ""
    bundlePath: ""
  certSecret:
    name: ""
    keyPath: "tls.key"
    certPath: "tls.crt"

# Configuration for the solr prometheus exporter
exporter:
  image: {}
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  #   pullSecrets:
  #     - myRegistryKeySecretName
  enabled: false  # Deploy the exporter
  configFile: "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml"  # The config file to point the exporter to
  updateStrategy: {}
  podAnnotations: {}  # Annotations to apply to the exporter pod
  resources: {}  # Resource limits for the exporter
  port: 9983  # The port to run the exporter on
  threads: 7  # The number of threads the exporter uses to query solr
  livenessProbe:  # Liveness configuration for exporter pod
    initialDelaySeconds: 20
    periodSeconds: 10
  readinessProbe:  # Readiness configuration for exporter pod
    initialDelaySeconds: 15
    periodSeconds: 5
  service:
    type: "ClusterIP"
    annotations: {}

zookeeper:
  replicaCount: 3
